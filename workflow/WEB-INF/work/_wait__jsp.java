/*
 * JSP generated by Resin 2.1.16 (built Tue Feb 15 11:12:27 PST 2005)
 */


import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import com.msn.cbbp.workflow.*;

public class _wait__jsp extends com.caucho.jsp.JavaPage{
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    com.caucho.jsp.QPageContext pageContext = (com.caucho.jsp.QPageContext) com.caucho.jsp.QJspFactory.create().getPageContext(this, request, response, null, true, 8192, true);
    javax.servlet.jsp.JspWriter out = (javax.servlet.jsp.JspWriter) pageContext.getOut();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.http.HttpSession session = pageContext.getSession();
    javax.servlet.ServletContext application = pageContext.getServletContext();
    response.setContentType("text/html; charset=GBK");
    request.setCharacterEncoding("GBK");
    try {
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string0, 0, _jsp_string0.length);
      pageContext.write(_jsp_string1, 0, _jsp_string1.length);
      
	WorkflowSession wfsession=SampleWorkflowSessions.getSampleWorkflowSession();
	List inputList=wfsession.getVariantList();
	for(int i=0;i<inputList.size();i++){
		UserVariant input=(UserVariant)inputList.get(i);
	
      pageContext.write(_jsp_string2, 0, _jsp_string2.length);
      out.print((input.getName()));
      pageContext.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((input.getValue()));
      pageContext.write(_jsp_string4, 0, _jsp_string4.length);
      
	
	}

      pageContext.write(_jsp_string5, 0, _jsp_string5.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      JspFactory.getDefaultFactory().releasePageContext(pageContext);
    }
  }

  private com.caucho.java.LineMap _caucho_line_map;
  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.util.CauchoSystem.getVersionId() != -2089842219)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Depend depend;
      depend = (com.caucho.vfs.Depend) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public com.caucho.java.LineMap _caucho_getLineMap()
  {
    return _caucho_line_map;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.java.LineMap lineMap,
                   com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    mergePath.addClassPath(getClass().getClassLoader());
    _caucho_line_map = new com.caucho.java.LineMap("_wait__jsp.java", "/workflow/wait.jsp");
    _caucho_line_map.add(4, 1);
    _caucho_line_map.add(2, 29);
    _caucho_line_map.add(15, 32);
    _caucho_line_map.add(21, 39);
    _caucho_line_map.add(21, 41);
    _caucho_line_map.add(22, 43);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("wait.jsp"), 1143871076187L, 773L);
    _caucho_depends.add(depend);
  }

  protected void _caucho_clearDepends()
  {
    _caucho_depends.clear();
  }

  private static byte []_jsp_string2;
  private static byte []_jsp_string3;
  private static byte []_jsp_string5;
  private static byte []_jsp_string1;
  private static byte []_jsp_string4;
  private static byte []_jsp_string0;
  static {
    try {
      _jsp_string2 = "\r\n	<input type='hidden' name='".getBytes("GBK");
      _jsp_string3 = "' value='".getBytes("GBK");
      _jsp_string5 = "\r\n</form>\r\n\r\n<script>\r\n	document.submitdata.submit();\r\n	//window.location='workflow.jsp';\r\n\r\n</script>\r\n</html>".getBytes("GBK");
      _jsp_string1 = "\r\n\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=big5\">\r\n<title>wait............</title>\r\n</head>\r\n\r\n\u6b63\u5728\u5904\u7406\uff0c \u8bf7\u7b49\u5f85............\r\n\r\n<form action='workflow.jsp' name='submitdata'>\r\n".getBytes("GBK");
      _jsp_string4 = "'>\r\n	".getBytes("GBK");
      _jsp_string0 = "\r\n".getBytes("GBK");
    } catch (java.io.UnsupportedEncodingException e) {
      e.printStackTrace();
    }
  }
}
